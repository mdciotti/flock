// Generated by CoffeeScript 1.8.0
var Vector;

Vector = (function() {
  function Vector(x, y) {
    this.x = x != null ? x : 0;
    this.y = y != null ? y : 0;
  }

  Vector.prototype.set = function(x, y) {
    this.x = x;
    this.y = y;
    return this;
  };

  Vector.prototype.transform = function(fn, args) {
    return new Vector(fn.apply(null, [this.x].concat(args)), fn.apply(null, [this.y].concat(args)));
  };

  Vector.prototype.transformSelf = function(fn, args) {
    this.x = fn.apply(null, [this.x].concat(args));
    this.y = fn.apply(null, [this.y].concat(args));
    return this;
  };

  Vector.prototype.setPolar = function(r, theta) {
    this.x = r * Math.cos(theta);
    this.y = r * Math.sin(theta);
    return this;
  };

  Vector.prototype.add = function(v) {
    return new Vector(this.x + v.x, this.y + v.y);
  };

  Vector.prototype.subtract = function(v) {
    return new Vector(this.x - v.x, this.y - v.y);
  };

  Vector.prototype.scale = function(v) {
    return new Vector(this.x * v, this.y * v);
  };

  Vector.prototype.magnitude = function() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  };

  Vector.prototype.magnitudeSq = function() {
    return this.x * this.x + this.y * this.y;
  };

  Vector.prototype.midpoint = function(v) {
    return this.add(v).scale(0.5);
  };

  Vector.prototype.normalize = function() {
    var iMag;
    iMag = 1 / this.magnitude();
    return new Vector(this.x * iMag, this.y * iMag);
  };

  Vector.prototype.dot = function(v) {
    return this.x * v.x + this.y * v.y;
  };

  Vector.prototype.crossMag = function(v) {
    return this.x * v.y - this.y * v.x;
  };

  Vector.prototype.angle = function() {
    return Math.atan2(this.y, this.x);
  };

  Vector.prototype.angleFrom = function(v) {
    return Math.acos(this.dot(v) / (this.magnitude() * v.magnitude()));
  };

  Vector.prototype.copy = function(v) {
    return new Vector(v.x, v.y);
  };

  Vector.prototype.dist = function(v) {
    var dx, dy;
    dx = v.x - this.x;
    dy = v.y - this.y;
    return Math.sqrt(dx * dx + dy * dy);
  };

  Vector.prototype.distSq = function(v) {
    var dx, dy;
    dx = v.x - this.x;
    dy = v.y - this.y;
    return dx * dx + dy * dy;
  };

  Vector.prototype.addSelf = function(v) {
    this.x += v.x;
    this.y += v.y;
    return this;
  };

  Vector.prototype.subtractSelf = function(v) {
    this.x -= v.x;
    this.y -= v.y;
    return this;
  };

  Vector.prototype.scaleSelf = function(k) {
    this.x *= k;
    this.y *= k;
    return this;
  };

  Vector.prototype.zero = function() {
    this.x = 0;
    this.y = 0;
    return this;
  };

  Vector.prototype.normalizeSelf = function() {
    var iMag;
    iMag = 1 / this.magnitude();
    this.x *= iMag;
    this.y *= iMag;
    return this;
  };

  return Vector;

})();

Vector.add = function(a, b) {
  return new Vector(a.x + b.x, a.y + b.y);
};

Vector.subtract = function(a, b) {
  return new Vector(a.x - b.x, a.y - b.y);
};

Vector.scale = function(a, k) {
  return new Vector(k * a.x, k * a.y);
};

Vector.normalize = function(a) {
  return new Vector(k * a.x, k * a.y);
};


//# sourceMappingURL=vec2.js.map
